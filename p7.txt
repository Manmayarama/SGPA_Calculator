#include <stdio.h>
#include <stdlib.h>
#include <string.h>

struct stud {
    long int ph;
    int sem;
    char name[15], usn[15], brnch[8];
    struct stud *next;
};

struct stud *head = NULL, *tail = NULL;
int count = 0;

void create(long int n, int s, char na[15], char u[15], char b[8]) {
    struct stud *newNode = (struct stud *)malloc(sizeof(struct stud));
    newNode->ph = n;
    newNode->sem = s;
    strcpy(newNode->name, na);
    strcpy(newNode->usn, u);
    strcpy(newNode->brnch, b);
    newNode->next = NULL;

    head = tail = newNode;
    count = 1;
}


void insert(long int n, int s, char na[15], char u[15], char b[8], int position) {
    struct stud *newNode = (struct stud *)malloc(sizeof(struct stud));
    newNode->ph = n;
    newNode->sem = s;
    strcpy(newNode->name, na);
    strcpy(newNode->usn, u);
    strcpy(newNode->brnch, b);
    newNode->next = NULL;

    if (head == NULL) {
        head = tail = newNode;
    } else if (position == 0) { // Insert at head
        newNode->next = head;
        head = newNode;
    } else { // Insert at tail
        tail->next = newNode;
        tail = newNode;
    }
    count++;
}

void delete(int position) {
    if (head == NULL) {
        printf("List is empty.\n");
        return;
    }

    struct stud *temp = head;
    if (position == 0) { // Delete from head
        head = head->next;
        if (head == NULL) tail = NULL;
        free(temp);
    } else { // Delete from tail
        while (temp->next != tail) {
            temp = temp->next;
        }
        tail = temp;
        tail->next = NULL;
        free(temp->next);
    }
    count--;
}

void display() {
    struct stud *temp = head;
    if (temp == NULL) {
        printf("List is empty.\n");
        return;
    }

    printf("Student details are as follows:\n");
    while (temp != NULL) {
        printf("-----------------------\n");
        printf("NAME: %s\nUSN: %s\nBRANCH: %s\nSEM: %d\nPHONE NO.: %ld\n", temp->name, temp->usn, temp->brnch, temp->sem, temp->ph);
        printf("-----------------------\n");
        temp = temp->next;
    }
    printf("Number of nodes: %d\n", count);
}

int main() {
    int choice, position;
    long int ph;
    int sem;
    char name[15], usn[15], brnch[8];
	 printf("--------MENU----------\n");
        printf("1. Create\n2. Insert at head\n3. Insert at tail\n4. Delete from head\n5. Delete from tail\n6. Display\n7. Exit\n");
        printf("----------------------\n");
    while (1) {
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter the name, USN, branch, sem, and phone number of the student respectively:\n");
                scanf("%s%s%s%d%ld", name, usn, brnch, &sem, &ph);
                create(ph, sem, name, usn, brnch);
                break;
            case 2:
            case 3:
                printf("Enter the name, USN, branch, sem, and phone number of the student respectively:\n");
                scanf("%s%s%s%d%ld", name, usn, brnch, &sem, &ph);
                insert(ph, sem, name, usn, brnch, choice - 1);
                break;
            case 4:
            case 5:
                delete(choice - 3);
                break;
            case 6:
                display();
                break;
            case 7:
                exit(0);
            default:
                printf("Invalid option.\n");
        }
    }

    return 0;
}